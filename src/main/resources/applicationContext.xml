<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
               http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context-4.0.xsd
               http://www.springframework.org/schema/tx
               http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
               http://www.springframework.org/schema/aop
               http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

    <context:property-placeholder location="classpath:credit.properties"/>

    <!-- 配置数据库连接池 -->
    <bean id="fipDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${pub.platform.db.ConnectionManager.sDBDriver}"/>
        <property name="url" value="${pub.platform.db.ConnectionManager.sConnStr}"/>
        <property name="username" value="${pub.platform.db.ConnectionManager.user}"/>
        <property name="password" value="${pub.platform.db.ConnectionManager.passwd}"/>
        <property name="maxActive" value="15"/>
        <property name="maxIdle" value="5"/>
    </bean>


    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="fipDataSource"/>
    </bean>


    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="fip,hfc,ibp,skyline.service"/>

    <!-- enable autowire -->
    <context:annotation-config/>

    <!--<tx:jta-transaction-manager />-->

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="fipDataSource"/>
        <!--<property name="mapperLocations" value="classpath:fip/repository/mapper/**/*.xml"/>-->
        <property name="mapperLocations">
            <list>
                <value>
                    classpath:fip/repository/mapper/**/*.xml
                </value>
                <value>
                    classpath:ibp/repository/mapper/**/*.xml
                </value>
            </list>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="fip.repository.dao,ibp.repository.dao"/>
    </bean>

    <!--viewscope-->
    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="skyline.config.scope.ViewScope"/>
                </entry>
            </map>
        </property>
    </bean>

    <!-- JMS-->
    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL">
            <value>${jms.brokerURL}</value>
        </property>
        <property name="userName" value="${jms.username}"/>
        <property name="password" value="${jms.password}"/>

    </bean>

    <bean id="jmsSendTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="defaultDestination" ref="send.unipay"/>
        <property name="timeToLive" value="${jms.timeToLive}"/>
    </bean>
    <bean id="jmsRecvTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="defaultDestination" ref="recv.unipay"/>
        <property name="timeToLive" value="${jms.timeToLive}"/>
        <property name="receiveTimeout" value="${jms.realtime_receive_timeout}"/>
    </bean>
    <!-- 实时发送  -->
    <bean id="send.unipay" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>${queue.fip.to.dep}</value>
        </constructor-arg>
    </bean>
    <!-- 实时接收  -->
    <bean id="recv.unipay" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>${queue.fip.from.dep}</value>
        </constructor-arg>
    </bean>

    <bean id="jmsFipOutTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="defaultDestinationName" value="${queue.dep.core.fip.out}"/>
        <property name="timeToLive" value="${jms.timeToLive}"/>
    </bean>

    <jms:listener-container connection-factory="jmsConnectionFactory" concurrency="5">
        <jms:listener destination="${queue.dep.core.fip.in}" ref="depMessageListener"/>
    </jms:listener-container>


    <!--定时任务定义 -->
    <!-- 总分账户对账 建行直连 cronTrigger -->
    <bean id="actchkZongFenHandler" class="fip.batch.actchk.ZongFenHandler"/>
    <bean id="actchkZongFenJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="actchkZongFenHandler"/>
        <property name="targetMethod" value="startActChk4Cron"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="zongfenCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="actchkZongFenJobDetailBean"/>
        <property name="cronExpression" value="0 50 7,8 * * ?"/>
    </bean>

    <!-- 总分账户对账 SCF供应链融资（平安 中信） cronTrigger -->
    <bean id="actchkZongFen4SCFHandler" class="fip.batch.actchk.ZongFen4SCFHandler"/>
    <bean id="actchkZongFen4SCFJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="actchkZongFen4SCFHandler"/>
        <property name="targetMethod" value="startActChk4Cron"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="zongfen4SCFCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="actchkZongFen4SCFJobDetailBean"/>
        <property name="cronExpression" value="0 40 7,8 * * ?"/>
    </bean>


    <!-- 总分账户对账校验结果通知 建行直连 cronTrigger -->
    <bean id="zongfenNotifyJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="actchkZongFenHandler"/>
        <property name="targetMethod" value="notifyResult4Cron"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="zongfenNotifyCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="zongfenNotifyJobDetailBean"/>
        <property name="cronExpression" value="0 0 9 * * ?"/>
    </bean>

    <!-- 总分账户对账校验结果通知 SCF供应链融资（平安 中信） cronTrigger -->
    <bean id="zongfen4SCFNotifyJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="actchkZongFen4SCFHandler"/>
        <property name="targetMethod" value="notifyResult4Cron"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="zongfen4SCFNotifyCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="zongfen4SCFNotifyJobDetailBean"/>
        <property name="cronExpression" value="5 0 9 * * ?"/>
    </bean>


    <!-- 新消费信贷代扣账单自动获取 批量处理 cronTrigger -->
    <!--<util:constant id="bizType.XFNEW" static-field="fip.common.constant.BizType.XFNEW" />-->
    <bean id="bizType.XFNEW" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="fip.common.constant.BizType.XFNEW"/>
    </bean>
    <bean id="channelBizType.XFNEW" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="fip.common.constant.BizType.XFNEW"/>
    </bean>
    <bean id="ccmsCutpayBatchHandler" class="fip.batch.crontask.CcmsCutpayBatchHandler">
        <property name="bizType" ref="bizType.XFNEW"/>
        <property name="channelBizType" ref="bizType.XFNEW"/>
    </bean>

    <bean id="ccmsCutpay_1_JobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ccmsCutpayBatchHandler"/>
        <property name="targetMethod" value="processAll"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="ccmsCutpayCronTriggerBean_1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="ccmsCutpay_1_JobDetailBean"/>
        <!--<property name="cronExpression" value="0 0 17 * * ?"/>-->
        <property name="cronExpression" value="0 0 17 * * ?"/>
    </bean>

    <!-- 消费金融代扣账单自动获取 批量处理 cronTrigger -->
    <bean id="bizType.XFJR" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="fip.common.constant.BizType.XFJR"/>
    </bean>
    <bean id="channelBizType.XFJR" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="fip.common.constant.BizType.XFJR"/>
    </bean>
    <bean id="xfjrCutpayBatchHandler" class="fip.batch.crontask.CcmsCutpayBatchHandler">
        <property name="bizType" ref="bizType.XFJR"/>
        <property name="channelBizType" ref="bizType.XFJR"/>
    </bean>

    <bean id="ccmsCutpay_xfjr_JobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="xfjrCutpayBatchHandler"/>
        <property name="targetMethod" value="processAll"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="ccmsCutpayCronTriggerBean_xfjr" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="ccmsCutpay_xfjr_JobDetailBean"/>
        <property name="cronExpression" value="0 30 16 * * ?"/>
    </bean>

    <!-- 专卖店代扣账单自动获取 批量处理 cronTrigger -->
    <bean id="zmdCutpayBatchHandler" class="fip.batch.crontask.ZmdCutpayBatchHandler" />
    <bean id="zmdCutpayJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="zmdCutpayBatchHandler"/>
        <property name="targetMethod" value="processAll"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="zmdCutpayCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="zmdCutpayJobDetailBean"/>
        <property name="cronExpression" value="0 10 17 * * ?"/>
    </bean>

    <!-- 小贷代扣账单自动获取 批量处理 cronTrigger -->
    <bean id="hccbCutpayBatchHandler" class="fip.batch.crontask.HccbCutpayBatchHandler" />
    <bean id="hccbCutpayJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="hccbCutpayBatchHandler"/>
        <property name="targetMethod" value="processAll"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="hccbCutpayCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="hccbCutpayJobDetailBean"/>
        <property name="cronExpression" value="0 0 21 * * ?"/>
    </bean>


    <!--SBS内部总分账户清算数据发送到EAI（JDE）-->
    <bean id="autoSendSbsZfqsRecordsJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="autoSendSbszfqsHandler"/>
        <property name="targetMethod" value="obtainAndSendSbsZfqsRecords"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="autoSendSbsZfqsRecordsCronTriggerBean"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="autoSendSbsZfqsRecordsJobDetailBean"/>
        <property name="cronExpression" value="0 0 1 * * ?"/>
    </bean>

    <!--FIP自动同步SBS账户-->
    <bean id="autoSyncSbsActRecordsJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="autoSyncSbsActRecordsHandler"/>
        <property name="targetMethod" value="getSbsActRecords"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="autoSyncSbsActRecordsCronTriggerBean"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="autoSyncSbsActRecordsJobDetailBean"/>
        <property name="cronExpression" value="0 0 2 * * ?"/>
    </bean>

    <!-- 设置调度 -->
    <bean id="myScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="zongfenCronTriggerBean"/>
                <ref bean="zongfen4SCFCronTriggerBean"/>
                <ref bean="zongfenNotifyCronTriggerBean"/>
                <ref bean="zongfen4SCFNotifyCronTriggerBean"/>

                <ref bean="ccmsCutpayCronTriggerBean_1"/>
                <ref bean="ccmsCutpayCronTriggerBean_xfjr"/>

                <ref bean="zmdCutpayCronTriggerBean"/>
                <ref bean="hccbCutpayCronTriggerBean"/>
                <ref bean="autoSyncSbsActRecordsCronTriggerBean"/>
                <ref bean="autoSendSbsZfqsRecordsCronTriggerBean"/>
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.threadPool.threadCount">10</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
            </props>
        </property>
    </bean>
</beans>
